<?xml version="1.0"?>
<launch>

	<!-- arguments -->
	<arg name="domain_strategic"	default="$(find rosplan_interface_strategic)/common/droneacharya/droneacharya-domain-all.pddl" />
	<arg name="domain_tactical"	default="$(find rosplan_interface_strategic)/common/droneacharya/droneacharya-domain-all.pddl" />
	<arg name="domain_all"	default="$(find rosplan_interface_strategic)/common/droneacharya/droneacharya-domain-all.pddl" />
	<arg name="problem_normal"	default="$(find rosplan_interface_strategic)/common/droneacharya/droneacharya-problem-21base.pddl" />
<!--	<arg name="problem_normal"	default="$(find rosplan_interface_strategic)/common/problem_strategic_init.pddl" />-->

	<!-- scene database (MongoDB) -->
	<include file="$(find mongodb_store)/launch/mongodb_store.launch">
		<arg name="db_path" value="$(find rosplan_interface_strategic)/common/mongoDB/"/>
	</include>



	<!-- knowledge base -->
	<node name="rosplan_knowledge_base" pkg="rosplan_knowledge_base" type="knowledgeBase" respawn="false" output="screen">
		<param name="domain_path" value="$(arg domain_all)" />
		<param name="problem_path" value="$(arg problem_normal)" />
		<param name="database_path" value="$(find rosplan_interface_strategic)/common/mongoDB/" />
		<!-- conditional planning flags -->
		<param name="use_unknowns" value="false" />
	</node>
	<node name="rosplan_knowledge_base_strategic" pkg="rosplan_knowledge_base" type="knowledgeBase" respawn="false" output="screen">
		<param name="domain_path" value="$(arg domain_all)" />
		<param name="problem_path" value="$(arg problem_normal)" />
		<param name="database_path" value="$(find rosplan_interface_strategic)/common/mongoDB/" />
		<!-- conditional planning flags -->
		<param name="use_unknowns" value="false" />
	</node>
	<node name="rosplan_knowledge_base_tactical" pkg="rosplan_knowledge_base" type="knowledgeBase" respawn="false" output="screen">
		<param name="domain_path" value="$(arg domain_all)" />
		<param name="problem_path" value="$(arg problem_normal)" />
		<param name="database_path" value="$(find rosplan_interface_strategic)/common/mongoDB/" />
		<!-- conditional planning flags -->
		<param name="use_unknowns" value="false" />
	</node>

	<!-- strategic plan control -->
	<node name="rosplan_interface_strategic_control" pkg="rosplan_interface_strategic" type="rpstrategiccontrol" respawn="false" output="screen">

		<!-- tactical planning interfaces -->
		<param name="problem_service_topic"  value="/tactical_problem_interface/problem_generation_server" />
		<param name="problem_service_topic_params"  value="/tactical_problem_interface/problem_generation_server_params" />-->
		<param name="planning_service_topic" value="/tactical_planner_interface/planning_server" />
		<param name="planning_service_topic_params" value="/tactical_planner_interface/planning_server_params" />
		<param name="parsing_service_topic"  value="/tactical_parsing_interface/parse_plan" />
		<param name="complete_plan_topic"    value="/tactical_parsing_interface/complete_plan" />

	</node>

	<!-- tactical plan control -->
	<node name="rosplan_interface_tactical_control_cm_1" pkg="rosplan_interface_strategic" type="rptacticalcontrol" respawn="false" output="screen">

		<!-- action server -->
		<param name="knowledge_base" value="rosplan_knowledge_base" />
		<param name="pddl_action_name" value="complete_mission_cm_1" />
		<param name="action_dispatch_topic" value="/strategic_plan_dispatch/action_dispatch" />
		<param name="action_feedback_topic" value="/strategic_plan_dispatch/action_feedback" />

		<!-- tactical planning interfaces -->
		<param name="cancel_service_topic" value="/tactical_plan_dispatcher/cancel_dispatch" />
		<param name="problem_service_topic" value="/tactical_problem_interface/problem_generation_server" />
		<param name="problem_service_topic_params"  value="/tactical_problem_interface/problem_generation_server_params" />
		<param name="planning_service_topic" value="/tactical_planner_interface/planning_server" />
		<param name="planning_service_topic_params" value="/tactical_planner_interface/planning_server_params" />
		<param name="parsing_service_topic" value="/tactical_parsing_interface/parse_plan" />
		<param name="dispatch_service_topic" value="/tactical_plan_dispatch/dispatch_plan" />
	</node>
	<node name="rosplan_interface_tactical_control_tc_1" pkg="rosplan_interface_strategic" type="rptacticalcontrol" respawn="false" output="screen">

		<!-- action server -->
		<param name="knowledge_base" value="rosplan_knowledge_base" />
		<param name="pddl_action_name" value="complete_mission_tc_1" />
		<param name="action_dispatch_topic" value="/strategic_plan_dispatch/action_dispatch" />
		<param name="action_feedback_topic" value="/strategic_plan_dispatch/action_feedback" />

		<!-- tactical planning interfaces -->
		<param name="cancel_service_topic" value="/tactical_plan_dispatcher/cancel_dispatch" />
		<param name="problem_service_topic" value="/tactical_problem_interface/problem_generation_server" />
		<param name="problem_service_topic_params"  value="/tactical_problem_interface/problem_generation_server_params" />
		<param name="planning_service_topic" value="/tactical_planner_interface/planning_server" />
		<param name="planning_service_topic_params" value="/tactical_planner_interface/planning_server_params" />
		<param name="parsing_service_topic" value="/tactical_parsing_interface/parse_plan" />
		<param name="dispatch_service_topic" value="/tactical_plan_dispatch/dispatch_plan" />
	</node>
	<node name="rosplan_interface_tactical_control_sm_a_1" pkg="rosplan_interface_strategic" type="rptacticalcontrol" respawn="false" output="screen">

		<!-- action server -->
		<param name="knowledge_base" value="rosplan_knowledge_base" />
		<param name="pddl_action_name" value="complete_mission_sm_a_1" />
		<param name="action_dispatch_topic" value="/strategic_plan_dispatch/action_dispatch" />
		<param name="action_feedback_topic" value="/strategic_plan_dispatch/action_feedback" />

		<!-- tactical planning interfaces -->
		<param name="cancel_service_topic" value="/tactical_plan_dispatcher/cancel_dispatch" />
		<param name="problem_service_topic" value="/tactical_problem_interface/problem_generation_server" />
		<param name="problem_service_topic_params"  value="/tactical_problem_interface/problem_generation_server_params" />
		<param name="planning_service_topic" value="/tactical_planner_interface/planning_server" />
		<param name="planning_service_topic_params" value="/tactical_planner_interface/planning_server_params" />
		<param name="parsing_service_topic" value="/tactical_parsing_interface/parse_plan" />
		<param name="dispatch_service_topic" value="/tactical_plan_dispatch/dispatch_plan" />
	</node>
	<node name="rosplan_interface_tactical_control_sm_b_1" pkg="rosplan_interface_strategic" type="rptacticalcontrol" respawn="false" output="screen">

		<!-- action server -->
		<param name="knowledge_base" value="rosplan_knowledge_base" />
		<param name="pddl_action_name" value="complete_mission_sm_b_1" />
		<param name="action_dispatch_topic" value="/strategic_plan_dispatch/action_dispatch" />
		<param name="action_feedback_topic" value="/strategic_plan_dispatch/action_feedback" />

		<!-- tactical planning interfaces -->
		<param name="cancel_service_topic" value="/tactical_plan_dispatcher/cancel_dispatch" />
		<param name="problem_service_topic" value="/tactical_problem_interface/problem_generation_server" />
		<param name="problem_service_topic_params"  value="/tactical_problem_interface/problem_generation_server_params" />
		<param name="planning_service_topic" value="/tactical_planner_interface/planning_server" />
		<param name="planning_service_topic_params" value="/tactical_planner_interface/planning_server_params" />
		<param name="parsing_service_topic" value="/tactical_parsing_interface/parse_plan" />
		<param name="dispatch_service_topic" value="/tactical_plan_dispatch/dispatch_plan" />
	</node>
	<node name="rosplan_interface_tactical_control_im_a_2" pkg="rosplan_interface_strategic" type="rptacticalcontrol" respawn="false" output="screen">

		<!-- action server -->
		<param name="knowledge_base" value="rosplan_knowledge_base" />
		<param name="pddl_action_name" value="complete_mission_im_a_2" />
		<param name="action_dispatch_topic" value="/strategic_plan_dispatch/action_dispatch" />
		<param name="action_feedback_topic" value="/strategic_plan_dispatch/action_feedback" />

		<!-- tactical planning interfaces -->
		<param name="cancel_service_topic" value="/tactical_plan_dispatcher/cancel_dispatch" />
		<param name="problem_service_topic" value="/tactical_problem_interface/problem_generation_server" />
		<param name="problem_service_topic_params"  value="/tactical_problem_interface/problem_generation_server_params" />
		<param name="planning_service_topic" value="/tactical_planner_interface/planning_server" />
		<param name="planning_service_topic_params" value="/tactical_planner_interface/planning_server_params" />
		<param name="parsing_service_topic" value="/tactical_parsing_interface/parse_plan" />
		<param name="dispatch_service_topic" value="/tactical_plan_dispatch/dispatch_plan" />
	</node>
	<node name="rosplan_interface_tactical_control_im_b_2" pkg="rosplan_interface_strategic" type="rptacticalcontrol" respawn="false" output="screen">

		<!-- action server -->
		<param name="knowledge_base" value="rosplan_knowledge_base" />
		<param name="pddl_action_name" value="complete_mission_im_b_2" />
		<param name="action_dispatch_topic" value="/strategic_plan_dispatch/action_dispatch" />
		<param name="action_feedback_topic" value="/strategic_plan_dispatch/action_feedback" />

		<!-- tactical planning interfaces -->
		<param name="cancel_service_topic" value="/tactical_plan_dispatcher/cancel_dispatch" />
		<param name="problem_service_topic" value="/tactical_problem_interface/problem_generation_server" />
		<param name="problem_service_topic_params"  value="/tactical_problem_interface/problem_generation_server_params" />
		<param name="planning_service_topic" value="/tactical_planner_interface/planning_server" />
		<param name="planning_service_topic_params" value="/tactical_planner_interface/planning_server_params" />
		<param name="parsing_service_topic" value="/tactical_parsing_interface/parse_plan" />
		<param name="dispatch_service_topic" value="/tactical_plan_dispatch/dispatch_plan" />
	</node>
	<node name="rosplan_interface_tactical_control_im_c_2" pkg="rosplan_interface_strategic" type="rptacticalcontrol" respawn="false" output="screen">

		<!-- action server -->
		<param name="knowledge_base" value="rosplan_knowledge_base" />
		<param name="pddl_action_name" value="complete_mission_im_c_2" />
		<param name="action_dispatch_topic" value="/strategic_plan_dispatch/action_dispatch" />
		<param name="action_feedback_topic" value="/strategic_plan_dispatch/action_feedback" />

		<!-- tactical planning interfaces -->
		<param name="cancel_service_topic" value="/tactical_plan_dispatcher/cancel_dispatch" />
		<param name="problem_service_topic" value="/tactical_problem_interface/problem_generation_server" />
		<param name="problem_service_topic_params"  value="/tactical_problem_interface/problem_generation_server_params" />
		<param name="planning_service_topic" value="/tactical_planner_interface/planning_server" />
		<param name="planning_service_topic_params" value="/tactical_planner_interface/planning_server_params" />
		<param name="parsing_service_topic" value="/tactical_parsing_interface/parse_plan" />
		<param name="dispatch_service_topic" value="/tactical_plan_dispatch/dispatch_plan" />
	</node>

	<!-- strategic planner interface -->
	<include file="$(find rosplan_planning_system)/launch/includes/planner_interface.launch">
		<arg name="node_name"            value="strategic_planner_interface" />
		<arg name="use_problem_topic"    value="true" />
		<arg name="problem_topic"        value="/strategic_problem_interface/problem_instance" />
		<arg name="planner_topic"        value="planner_output" />
		<arg name="domain_path"          value="$(arg domain_strategic)" />
		<arg name="problem_path"         value="$(find rosplan_interface_strategic)/common/problem_strategic.pddl" />
		<arg name="data_path"            value="$(find rosplan_interface_strategic)/common/strategic" />
		<arg name="planner_command"      value="timeout 20 $(find rosplan_planning_system)/common/bin/optic-cplex -N DOMAIN PROBLEM" />
	</include>

	<!-- tactical planner interface -->
	<include file="$(find rosplan_planning_system)/launch/includes/planner_interface.launch">
		<arg name="node_name"            value="tactical_planner_interface" />
		<arg name="use_problem_topic"    value="true" />
		<arg name="problem_topic"        value="/tactical_problem_interface/problem_instance" />
		<arg name="planner_topic"        value="planner_output" />
		<arg name="domain_path"          value="$(arg domain_tactical)" />
		<arg name="problem_path"         value="$(find rosplan_interface_strategic)/common/problem_tactical.pddl" />
		<arg name="data_path"            value="$(find rosplan_interface_strategic)/common/tactical" />
		<arg name="planner_command"      value="timeout 10 $(find rosplan_planning_system)/common/bin/optic-cplex -N DOMAIN PROBLEM" />
	</include>

	<!-- strategic problem generation -->
	<include file="$(find rosplan_planning_system)/launch/includes/problem_interface.launch">
		<arg name="node_name"        value="strategic_problem_interface" />
		<arg name="knowledge_base"   value="rosplan_knowledge_base_strategic" />
		<arg name="domain_path"      value="$(arg domain_strategic)" />
		<arg name="problem_path"     value="$(find rosplan_interface_strategic)/common/problem_strategic.pddl" />
		<arg name="problem_topic"    value="problem_instance" />
	</include>

	<!-- tactical problem generation -->
	<include file="$(find rosplan_planning_system)/launch/includes/problem_interface.launch">
		<arg name="node_name"        value="tactical_problem_interface" />
		<arg name="knowledge_base"   value="rosplan_knowledge_base_tactical" />
		<arg name="domain_path"      value="$(arg domain_tactical)" />
		<arg name="problem_path"     value="$(find rosplan_interface_strategic)/common/problem_tactical.pddl" />
		<arg name="problem_topic"    value="problem_instance" />
	</include>

	<!-- strategic plan parsing -->
	<include file="$(find rosplan_planning_system)/launch/includes/parsing_interface.launch">
		<arg name="node_name"        value="strategic_parsing_interface" />
		<arg name="planner_topic"    value="/strategic_planner_interface/planner_output" />
		<arg name="plan_topic"       value="complete_plan" />
	</include>

	<!-- tactical plan parsing -->
	<include file="$(find rosplan_planning_system)/launch/includes/parsing_interface.launch">
		<arg name="node_name"        value="tactical_parsing_interface" />
		<arg name="planner_topic"    value="/tactical_planner_interface/planner_output" />
		<arg name="plan_topic"       value="complete_plan" />
	</include>

	<!-- strategic plan dispatch -->
	<include file="$(find rosplan_planning_system)/launch/includes/dispatch_interface.launch">
		<arg name="node_name"                value="strategic_plan_dispatch" />
		<arg name="plan_topic"               value="/strategic_parsing_interface/complete_plan" />
		<arg name="action_dispatch_topic"    value="action_dispatch" />
		<arg name="action_feedback_topic"    value="action_feedback" />
	</include>

	<!-- tactical plan dispatch -->
	<include file="$(find rosplan_planning_system)/launch/includes/dispatch_interface.launch">
		<arg name="node_name"                value="tactical_plan_dispatch" />
		<arg name="plan_topic"               value="/tactical_parsing_interface/complete_plan" />
		<arg name="action_dispatch_topic"    value="action_dispatch" />
		<arg name="action_feedback_topic"    value="action_feedback" />
	</include>

	<!-- ********** -->
	<!-- interfaces -->
	<!-- ********** -->

    <!-- probably not needed -->


	<!-- sim actions --><!-- do be updated to the current domain -->


<!--	actions initialization -->
	<include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="action_duration"	value="-1.0" />
		<arg name="pddl_action_name" value="goto_component_charged" />
		<arg name="action_dispatch_topic" value="/tactical_plan_dispatch/action_dispatch" />
		<arg name="action_feedback_topic" value="/tactical_plan_dispatch/action_feedback" />
	</include>
	<include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="action_duration"	value="-1.0" />
		<arg name="pddl_action_name" value="charge_and_goto" />
		<arg name="action_dispatch_topic" value="/tactical_plan_dispatch/action_dispatch" />
		<arg name="action_feedback_topic" value="/tactical_plan_dispatch/action_feedback" />
	</include>


	<include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="action_duration"	value="-1.0" />
		<arg name="pddl_action_name" value="complete_mission_cm_1" />
		<arg name="action_dispatch_topic" value="/tactical_plan_dispatch/action_dispatch" />
		<arg name="action_feedback_topic" value="/tactical_plan_dispatch/action_feedback" />
	</include>

<!--	tatical-->
	<include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="action_duration"	value="-1.0" />
		<arg name="pddl_action_name" value="goto_component_tactical" />
		<arg name="action_dispatch_topic" value="/tactical_plan_dispatch/action_dispatch" />
		<arg name="action_feedback_topic" value="/tactical_plan_dispatch/action_feedback" />
	</include>
	<include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="action_duration"	value="2.0" />
		<arg name="pddl_action_name" value="change_perspective" />
		<arg name="action_dispatch_topic" value="/tactical_plan_dispatch/action_dispatch" />
		<arg name="action_feedback_topic" value="/tactical_plan_dispatch/action_feedback" />
	</include>
	<include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="action_duration"	value="-1.0" />
		<arg name="pddl_action_name" value="individual_inspection" />
		<arg name="action_dispatch_topic" value="/tactical_plan_dispatch/action_dispatch" />
		<arg name="action_feedback_topic" value="/tactical_plan_dispatch/action_feedback" />
	</include>
	<include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="action_duration"	value="2" />
		<arg name="pddl_action_name" value="cooperative_inspection" />
		<arg name="action_dispatch_topic" value="/tactical_plan_dispatch/action_dispatch" />
		<arg name="action_feedback_topic" value="/tactical_plan_dispatch/action_feedback" />
	</include>
	<include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="action_duration"	value="-1.0" />
		<arg name="pddl_action_name" value="dynamic_charge" />
		<arg name="action_dispatch_topic" value="/tactical_plan_dispatch/action_dispatch" />
		<arg name="action_feedback_topic" value="/tactical_plan_dispatch/action_feedback" />
	</include>




	<!--	&lt;!&ndash; sim strategic actions &ndash;&gt;-->
	<node name="rosplan_interface_strategic_dock" pkg="rosplan_planning_system" type="simulatedAction" respawn="false" output="screen">
		<param name="action_duration"	value="-1.0" />
		<param name="knowledge_base" value="rosplan_knowledge_base" />
		<param name="pddl_action_name" value="goto_component_charged" />
		<param name="action_dispatch_topic" value="/strategic_plan_dispatch/action_dispatch" />
		<param name="action_feedback_topic" value="/strategic_plan_dispatch/action_feedback" />
	</node>
	<node name="rosplan_interface_strategic_undock" pkg="rosplan_planning_system" type="simulatedAction" respawn="false" output="screen">
		<param name="action_duration"	value="-1.0" />
		<param name="knowledge_base" value="rosplan_knowledge_base" />
		<param name="pddl_action_name" value="charge_and_goto" />
		<param name="action_dispatch_topic" value="/strategic_plan_dispatch/action_dispatch" />
		<param name="action_feedback_topic" value="/strategic_plan_dispatch/action_feedback" />
	</node>
</launch>